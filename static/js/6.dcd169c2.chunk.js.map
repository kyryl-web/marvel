{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","getItem","item","char","name","title","description","slice","thumbnail","path","extension","homapage","urls","wiki","comics","items","comic","price","digitalId","prices","language","textObjects","pageCount","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","ComicsList","comicsList","setComicsList","setOffset","newItemLoading","setNewItemLoading","useEffect","localStorage","JSON","parse","onRequest","initial","then","onComicsLoaded","newComics","setItem","stringify","i","className","to","state","renderComics","spinner","Spinner","errorMessage","onClick","disabled","AppBanner","avengers","avengersLogo","ComicsPage","Helmet","content"],"mappings":"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","file":"static/js/6.dcd169c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} \r\n    src={img}\r\n    alt='error'/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const {loading, request, error, clearError} = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=0cabaa5c82f123bb2173e8576631d568';\r\n  const _baseOffset = 210;\r\n  const _comicsOffset = 10500;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  const getAllComics = async (offset = _comicsOffset) => {\r\n    const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  }\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  }\r\n\r\n  const getItem = async (id, item) => {\r\n    let res;\r\n    if (item === 'char') {\r\n      res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n      return _transformCharacter(res.data.results[0]);\r\n    }\r\n    else if (item === 'comic') {\r\n      res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n      return _transformComics(res.data.results[0]);\r\n    }\r\n    \r\n  }\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      title: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homapage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    }\r\n  }\r\n\r\n  const _transformComics = (comic) => {\r\n    return {\r\n      id: comic.id,\r\n      title: comic.title,\r\n      price: comic.digitalId && comic.prices[0].price ? comic.prices[0].price + '$' : 'NOT AVAILABLE',\r\n      thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n      description: comic.description || 'There is no description',\r\n      language: comic.textObjects.language || 'en-us',\r\n      pageCount: comic.pageCount ? `${comic.pageCount} p.` : 'No information about the number of pages'\r\n    }\r\n  }\r\n  return {loading, \r\n          error, \r\n          getAllCharacters, \r\n          getCharacter, \r\n          clearError, \r\n          getAllComics, \r\n          getComic, \r\n          getItem}\r\n}\r\n\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(url, {method, body, headers});\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setLoading(false);\r\n      return data;\r\n\r\n    } catch(e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n    }\r\n\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n  return {loading, request, error, clearError};\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const {loading, error, getAllComics, clearError} = useMarvelService();\n    const [offset, setOffset] = useState(10500);\n    const [newItemLoading, setNewItemLoading] = useState(true);\n    \n\n    useEffect(() => {\n        if (!localStorage.getItem('data')) {\n            onRequest(offset, true);\n        }\n        else {\n            setComicsList(JSON.parse(localStorage.getItem('data')));\n            setNewItemLoading(false);\n        }\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        clearError();\n        \n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsLoaded)\n    }\n    \n    const onComicsLoaded = (newComics) => {\n        localStorage.setItem('data', JSON.stringify([...comicsList, ...newComics]));\n        setNewItemLoading(false)\n        setComicsList(comics => [...comics, ...newComics]);\n        setOffset(offset => offset + 8);\n    }\n\n    function renderComics(comics) {\n        const items = comics.map(({title, thumbnail, price, id}, i) => {\n            return (\n                <li \n                    className=\"comics__item\"\n                    key={i}>\n                    <Link to={`/comics/${id}`} state={{from: '/comics'}}>\n                        <img src={thumbnail} alt={title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </Link>\n                </li>\n            )\n        })\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderComics(comicsList);\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {items}\n            {spinner}\n            {errorMessage}\n            <button \n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}\n                disabled={loading}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from '../comicsList/ComicsList';\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst ComicsPage = () => {\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Page with list of our comics\" />\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner/>\r\n      <ComicsList />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}